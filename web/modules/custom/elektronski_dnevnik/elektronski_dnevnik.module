<?php

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_menu_links_discovered_alter().
 * Modifies the menu links based on user login status and role.
 */
function elektronski_dnevnik_menu_links_discovered_alter(array &$links) {
  $current_user = \Drupal::currentUser();

  if ($current_user->isAuthenticated()) {
    // Dodajemo Logout link ako je korisnik prijavljen
    $links['elektronski_dnevnik.logout_link'] = [
      'title' => t('Logout'),
      'route_name' => 'user.logout',
      'menu_name' => 'main-menu',
      'weight' => 0,
    ];

    // Uklanjamo Login link ako je korisnik već ulogovan
    if (isset($links['elektronski_dnevnik.custom_login_link'])) {
      unset($links['elektronski_dnevnik.custom_login_link']);
    }
  }
  else {
    // Korisnik NIJE prijavljen - prikazujemo Login link
    $links['elektronski_dnevnik.custom_login_link'] = [
      'title' => t('Login'),
      'route_name' => 'elektronski_dnevnik.login',
      'menu_name' => 'main-menu',
      'weight' => 0,
    ];

    // Ako postoji logout link, uklanjamo ga
    if (isset($links['elektronski_dnevnik.logout_link'])) {
      unset($links['elektronski_dnevnik.logout_link']);
    }
  }
}

/**
 * Callback funkcija za ograničavanje pristupa.
 */
function elektronski_dnevnik_teacher_access(AccountInterface $account) {
  return $account->hasRole('teacher') ? AccessResult::allowed() : AccessResult::forbidden();
}

/**
 * Callback funkcija za ograničavanje pristupa.
 */
function elektronski_dnevnik_student_access(AccountInterface $account) {
  return $account->hasRole('student') ? AccessResult::allowed() : AccessResult::forbidden();
}

/**
 * Callback funkcija za ograničavanje pristupa.
 */
function elektronski_dnevnik_teacher_department_access(AccountInterface $account) {
  return $account->hasRole('razredni_staresina') ? AccessResult::allowed() : AccessResult::forbidden();
}